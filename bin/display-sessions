#!/bin/bash

# Define icons with colors
SESSION_ICON=""    # Green icon for active tmux sessions
TMUXP_ICON=""     # Grey icon for tmuxp sessions

# Get the current tmux session
CURRENT_SESSION=$(tmux display-message -p '#S')

# List active tmux sessions and prepend the icon, excluding the current session
SESSIONS=$(tmux list-sessions -F "#{session_name}" | grep -v "^$CURRENT_SESSION$" | sed "s/^/$SESSION_ICON /")

# List tmuxp sessions from the .config/tmuxp directory, excluding active ones and the current session
# and only including those with valid start_directory paths
TMUXP_DIR="$HOME/.config/tmuxp"
if [ -d "$TMUXP_DIR" ]; then
  TMUXP_SESSIONS=""
  for file in "$TMUXP_DIR"/*.yaml; do
    session_name=$(yq e '.session_name' "$file")  # Extract session_name using yq
    start_directory=$(yq e '.start_directory' "$file")  # Extract start_directory using yq

    # Expand tilde (~) to the full home directory path
    start_directory=$(eval echo "$start_directory")

    # Get the base file name without extension for tmuxp session
    file_name=$(basename "$file" .yaml)

    # Check if the session is not active (including the current session) and if the start_directory exists
    if [ -d "$start_directory" ] && ! echo "$SESSIONS" | grep -q -F "$session_name" && [ "$session_name" != "$CURRENT_SESSION" ]; then
      TMUXP_SESSIONS+="$TMUXP_ICON $session_name ($file_name)"$'\n'
    fi
  done
fi

# Combine the session lists
COMBINED_SESSIONS=$(echo -e "Tmux Sessions:\n$SESSIONS\n\nTmuxp Sessions:\n$TMUXP_SESSIONS")

# Display the sessions in a tmux popup and allow the user to select one
SELECTED_SESSION=$(echo -e "$COMBINED_SESSIONS" | fzf --layout=reverse --border --preview "echo {}" --preview-window=up:3 --ansi)

# Exit if no session is selected (Escape or empty selection)
if [ -z "$SELECTED_SESSION" ]; then
  exit 0
fi

# Strip the icon and session name (with file name) from the selected session
# Format: "SESSION_ICON session_name (file_name)"
STRIPPED_SESSION="${SELECTED_SESSION#* }"
SESSION_NAME=$(echo "$STRIPPED_SESSION" | sed -e 's/ (.*)//')
FILE_NAME=$(echo "$STRIPPED_SESSION" | sed -e 's/.* (\(.*\))$/\1/')

# Ensure that the file name is properly quoted
ESCAPED_FILE_NAME=$(printf '%q' "$FILE_NAME")

# Switch to the selected tmux session if it exists, or load the tmuxp session in detached state
if echo "$SESSIONS" | grep -q -F "$SESSION_NAME"; then
  tmux switch-client -t "$SESSION_NAME"
elif echo "$TMUXP_SESSIONS" | grep -q -F "$SESSION_NAME"; then
  # Load the tmuxp session in detached mode using the file name
  tmuxp load -d "$TMUXP_DIR/$ESCAPED_FILE_NAME.yaml"
  # Immediately switch to the newly loaded session
  tmux switch-client -t "$SESSION_NAME"
fi

